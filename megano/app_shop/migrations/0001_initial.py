# Generated by Django 4.1.5 on 2023-01-05 13:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_item', models.CharField(max_length=50, verbose_name='наименование пункта')),
            ],
            options={
                'verbose_name': 'дополнительная информация',
                'verbose_name_plural': 'дополнительная информация',
                'db_table': 'add_info',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=150, verbose_name='ключ сессии')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='сумма товаров в корзине')),
                ('number_of_goods', models.IntegerField(blank=True, null=True, verbose_name='количество товаров в корзине')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_cart', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'корзина',
                'verbose_name_plural': 'корзины',
                'db_table': 'cart',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='название категории')),
                ('image', models.ImageField(upload_to='categories', verbose_name='изображение категории')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='DeliveryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='тип доставки')),
                ('free_delivery', models.BooleanField(blank=True, default=False, null=True, verbose_name='возможность бесплатной доставки')),
                ('purchase_amount_for_free_delivery', models.IntegerField(blank=True, null=True, verbose_name='минимальная сумма заказа для бесплатной доставки')),
                ('delivery_cost', models.IntegerField(verbose_name='стоимость платной доставки')),
            ],
            options={
                'verbose_name': 'тип доставки',
                'verbose_name_plural': 'типы доставки',
                'db_table': 'delivery_type',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=12, unique=True, verbose_name='артикул')),
                ('barcode', models.CharField(max_length=15, unique=True, verbose_name='штрихкод')),
                ('title', models.CharField(max_length=100, verbose_name='наименование товара')),
                ('description', models.TextField(verbose_name='описание товара')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='цена')),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, verbose_name='текущая цена')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='количество товара на складе')),
                ('main_photo', models.ImageField(upload_to='good', verbose_name='главное фото товара')),
                ('is_limited', models.BooleanField(blank=True, default=False, null=True, verbose_name='ограниченный тираж')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
                'db_table': 'good',
            },
        ),
        migrations.CreateModel(
            name='KeyFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_item', models.CharField(max_length=100, verbose_name='наименование пункта')),
                ('description', models.TextField(verbose_name='описание')),
            ],
            options={
                'verbose_name': 'ключевая особенность',
                'verbose_name_plural': 'ключевые особенности',
                'db_table': 'key_feature',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='статус заказа')),
            ],
            options={
                'verbose_name': 'статус заказа',
                'verbose_name_plural': 'статусы заказов',
                'db_table': 'order_status',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='способ оплаты')),
            ],
            options={
                'verbose_name': 'способ оплаты',
                'verbose_name_plural': 'способы оплаты',
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='название акции')),
                ('description', models.TextField(verbose_name='описание акции')),
                ('is_active', models.BooleanField(blank=True, default=False, null=True, verbose_name='статус активности')),
                ('discount_size', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='размер скидки')),
                ('promo_start_date', models.DateField(blank=True, null=True, verbose_name='дата начала акции')),
                ('promo_end_date', models.DateField(blank=True, null=True, verbose_name='дата окончания акции')),
            ],
            options={
                'verbose_name': 'акция',
                'verbose_name_plural': 'акции',
                'db_table': 'promotion',
                'ordering': ['promo_end_date'],
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='название')),
                ('unit', models.CharField(blank=True, max_length=10, null=True, verbose_name='единицы измерения')),
            ],
            options={
                'verbose_name': 'характеристика',
                'verbose_name_plural': 'характеристики',
                'db_table': 'specifications',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='тег')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'теги',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='название подкатегории')),
                ('image', models.ImageField(upload_to='categories', verbose_name='изображение подкатегории')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='app_shop.category', verbose_name='категория')),
            ],
            options={
                'verbose_name': 'подкатегория',
                'verbose_name_plural': 'подкатегории',
                'db_table': 'subcategory',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, verbose_name='электронная почта')),
                ('text', models.TextField(verbose_name='отзыв')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_reviews', to='app_shop.good', verbose_name='товар')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='Номер телефона в формате 9998887766', max_length=10, verbose_name='номер телефона')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='полное имя')),
                ('user_photo', models.ImageField(blank=True, null=True, upload_to='profile', verbose_name='фото пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'профиль пользователя',
                'verbose_name_plural': 'профили пользователей',
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='дата заказа')),
                ('city', models.CharField(max_length=100, verbose_name='город доставки')),
                ('address', models.TextField(verbose_name='адрес доставки')),
                ('order_amount', models.FloatField(blank=True, null=True, verbose_name='сумма заказа')),
                ('delivery_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_delivery_type', to='app_shop.deliverytype', verbose_name='тип доставки')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_payment_method', to='app_shop.paymentmethod', verbose_name='способ оплаты')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_status', to='app_shop.orderstatus', verbose_name='статус заказ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_orders', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
                'db_table': 'order',
                'ordering': ['-date_create'],
            },
        ),
        migrations.CreateModel(
            name='KeyGoodFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_good_features', to='app_shop.good', verbose_name='товар')),
                ('key_feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shop.keyfeature', verbose_name='ключевая особенность')),
            ],
            options={
                'verbose_name': 'ключевая особенность товара',
                'verbose_name_plural': 'ключевые особенности товара',
                'db_table': 'key_good_feature',
            },
        ),
        migrations.CreateModel(
            name='GoodTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_tags', to='app_shop.good', verbose_name='товар')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_by_tags', to='app_shop.tag', verbose_name='тег')),
            ],
            options={
                'verbose_name': 'тег товара',
                'verbose_name_plural': 'теги товаров',
                'db_table': 'good_tag',
            },
        ),
        migrations.CreateModel(
            name='GoodSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, verbose_name='значение')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_specifications', to='app_shop.good', verbose_name='товар')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shop.specification', verbose_name='характеристика')),
            ],
            options={
                'verbose_name': 'характеристика товара',
                'verbose_name_plural': 'характеристики товаров',
                'db_table': 'good_specification',
            },
        ),
        migrations.CreateModel(
            name='GoodInOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='количество')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='сумма')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_goods', to='app_shop.good', verbose_name='товар')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_in_order', to='app_shop.order', verbose_name='заказ')),
            ],
            options={
                'verbose_name': 'товар в заказе',
                'verbose_name_plural': 'товары в заказе',
                'db_table': 'good_in_order',
            },
        ),
        migrations.CreateModel(
            name='GoodInCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='количество')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='сумма')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_in_carts', to='app_shop.cart', verbose_name='корзина')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_goods', to='app_shop.good', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'товар в корзине',
                'verbose_name_plural': 'товары в корзине',
                'db_table': 'good_in_cart',
            },
        ),
        migrations.AddField(
            model_name='good',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_goods', to='app_shop.subcategory', verbose_name='категория товара'),
        ),
        migrations.AddField(
            model_name='good',
            name='promotion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_on_sale', to='app_shop.promotion', verbose_name='участвует в акции'),
        ),
        migrations.CreateModel(
            name='AddGoodPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='good_gallery', verbose_name='фото товара')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_gallery', to='app_shop.good', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'фотография товара',
                'verbose_name_plural': 'фотографии товара',
                'db_table': 'add_good_photo',
            },
        ),
        migrations.CreateModel(
            name='AddGoodInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, verbose_name='значение')),
                ('add_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shop.addinfo', verbose_name='наименование пункта')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_info_about_good', to='app_shop.good', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'дополнительная информация о товаре',
                'verbose_name_plural': 'дополнительные информации о товаре',
                'db_table': 'add_good_info',
            },
        ),
    ]
